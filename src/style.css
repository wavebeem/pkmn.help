:root {
  --color-bg1: hsl(0 0% 100%);
  --color-bg2: hsl(0 0% 96%);
  --color-bg3: hsl(0 0% 90%);
  --color-fg1: hsl(0 0% 7%);
  --color-fg2: hsl(0 0% 20%);
  --color-fg3: hsl(0 0% 40%);
  --color-fg4: hsl(0 0% 60%);
  --color-pokeball: hsl(357 97% 46%);
  --color-button1: hsl(0 0% 100%);
  --color-button1b: hsl(0 0% 96%);
  --color-button-hover1: hsl(200 100% 98%);
  --color-button-hover1b: hsl(200 100% 96%);
  --color-badge: hsl(120 70% 30%);
  --color-link: hsl(240 100% 50%);
  --color-link-hover: hsl(240 60% 60%);
  --color-border1: hsl(0 0% 50%);
  --color-border2: hsl(0 0% 80%);
  --color-border3: hsl(0 0% 90%);
  --color-vibrant-border: hsl(0 0% 0% / 0.2);
  --color-vibrant-border1: hsl(0 0% 0% / 0.6);
  --color-scroll-fg: hsl(0 0% 20%);
  --color-scroll-bg: hsl(0 0% 90%);
  --type-min-width: 5rem;
  scrollbar-color: var(--color-scroll-fg) var(--color-scroll-bg);
  overflow-y: scroll;
}

:root[lang="pl"],
:root[lang="ru"] {
  --type-min-width: 8rem;
}

:root[data-theme="dark"],
:root[data-theme="auto"][data-theme-auto="dark"] {
  --color-bg1: hsl(220 20% 25%);
  --color-bg2: hsl(220 20% 20%);
  --color-bg3: hsl(220 20% 30%);
  --color-fg1: hsl(220 20% 90%);
  --color-fg2: hsl(220 20% 80%);
  --color-fg3: hsl(220 20% 70%);
  --color-fg4: hsl(220 20% 60%);
  --color-pokeball: hsl(357 70% 40%);
  --color-button1: hsl(220 20% 28%);
  --color-button1b: hsl(220 20% 24%);
  --color-button-hover1: hsl(220 20% 32%);
  --color-button-hover1b: hsl(220 20% 28%);
  --color-badge: hsl(120 60% 60%);
  --color-link: hsl(180 100% 70%);
  --color-link-hover: hsl(180 80% 95%);
  --color-border1: hsl(220 20% 55%);
  --color-border2: hsl(220 20% 35%);
  --color-border3: hsl(220 20% 30%);
  --color-vibrant-border: hsl(0 0% 100% / 0.2);
  --color-vibrant-border1: hsl(0 0% 100% / 0.8);
  --color-scroll-fg: hsl(220 20% 80%);
  --color-scroll-bg: hsl(220 20% 30%);
}

[hidden] {
  display: none;
}

.Select {
  position: relative;
}

.Select > select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.Select:after {
  content: "";
  position: absolute;
  width: 0.5rem;
  height: 0.5rem;
  border: 3px solid;
  border-top: 0;
  border-left: 0;
  transform: rotate(45deg);
  right: 1rem;
  top: 30%;
  pointer-events: none;
}

.Select > select > option {
  font-weight: initial;
}

.bg3 {
  background-color: var(--color-bg3);
}
.bg2 {
  background-color: var(--color-bg2);
}
.bg1 {
  background-color: var(--color-bg1);
}

.fg4 {
  color: var(--color-fg4);
}
.fg3 {
  color: var(--color-fg3);
}
.fg2 {
  color: var(--color-fg2);
}
.fg1 {
  color: var(--color-fg1);
}

.border-vibrant2 {
  border-color: var(--color-vibrant-border1);
}
.border-vibrant {
  border-color: var(--color-vibrant-border);
}

.border3 {
  border-color: var(--color-border3);
}
.border2 {
  border-color: var(--color-border2);
}
.border1 {
  border-color: var(--color-border1);
}

.grid {
  display: grid;
}

.gap4 {
  gap: 2rem;
}
.gap3 {
  gap: 1rem;
}
.gap2 {
  gap: 0.5rem;
}
.gap1 {
  gap: 0.25rem;
}

.pre-wrap {
  white-space: pre-wrap;
}

.fill-currentColor {
  fill: currentColor;
}

.w0 {
  width: 0;
}

.mw-max {
  max-width: max-content;
}

.sticky {
  position: sticky;
}

.cursor-na {
  cursor: not-allowed;
}

.fg-link {
  color: var(--color-link);
}
.fg-link:hover {
  color: var(--color-link-hover);
}

.tabular-nums {
  font-variant-numeric: tabular-nums;
}

.fallback-content {
  animation: 1s fallback-content-animation;
}

@keyframes fallback-content-animation {
  0%,
  99% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.MatchupsSection-Container {
  display: grid;
  gap: 0.25rem;
  grid-template-columns: repeat(
    auto-fill,
    minmax(calc(var(--type-min-width) + 16px), 1fr)
  );
}

.MultiTypeSelector-Container,
.TypeSelector-Container {
  grid-template-columns: repeat(
    auto-fill,
    minmax(calc(var(--type-min-width) + 2.5rem + 2px), 1fr)
  );
}

.ButtonGrid {
  display: grid;
  grid-gap: 1rem;
  align-items: start;
}

.Spinner {
  border-radius: 9999px;
  width: 1em;
  height: 1em;
  border: 2px solid;
  border-right-color: transparent;
  animation: 1s linear infinite Spinner-spin;
}

@keyframes Spinner-spin {
  100% {
    transform: rotate(1turn);
  }
}

button {
  /* https://caniuse.com/css-appearance */
  -webkit-appearance: none;
  appearance: none;
}

.active-squish:active:not(:disabled) {
  transform: translateY(0.5px) scale(0.97);
}

.button-bg {
  background: var(--color-button1)
    linear-gradient(to bottom, var(--color-button1) 20%, var(--color-button1b));
}

.button-bg:hover {
  background: var(--color-button-hover1)
    linear-gradient(
      to bottom,
      var(--color-button-hover1) 20%,
      var(--color-button-hover1b)
    );
}

.content-wide {
  max-width: 1100px;
}

.content-narrow {
  max-width: 700px;
}

.button-shadow {
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.05);
}

.inset-shadow {
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.no-pointer {
  pointer-events: none;
  user-select: none;
}

.no-select {
  user-select: none;
}

.img-crisp {
  /* https://caniuse.com/css-crisp-edges */
  image-rendering: crisp-edges;
  image-rendering: pixelated;
}

.img-shadow {
  filter: drop-shadow(4px 4px 0 rgb(0 0 0 / 10%));
}

.TabBar {
  border-color: var(--color-border2);
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.05);
  gap: 0.5rem;
  flex-wrap: wrap;
  padding: 1rem;
  padding-bottom: 0.75rem;
  padding-top: 1.25rem;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  justify-content: center;
}

.TabBar-Item-Selected {
  border-color: var(--color-fg1);
  background: var(--color-fg1);
  color: var(--color-bg1);
}

.StatsTable {
  display: grid;
  grid-gap: 0.5rem;
  grid-template-columns: max-content max-content 1fr;
  height: min-content;
}

.Monster {
  display: grid;
  row-gap: 1rem;
  grid-template-areas:
    "icon"
    "links"
    "stats";
}

.Monster-icon {
  grid-area: icon;
}

.Monster-links {
  grid-area: links;
  justify-content: center;
}

.Monster-stats {
  grid-area: stats;
}

@media (min-width: 40em) {
  .ButtonGrid {
    grid-template-columns: 1fr 4fr;
  }

  .TabBar {
    display: flex;
  }

  .grid-col2 {
    grid-template-columns: 1fr 1fr;
  }
}

@media (min-width: 60em) {
  .Monster {
    grid-template-columns: 220px 1fr;
    grid-template-areas:
      "icon stats"
      "icon links";
  }

  .Monster-links {
    grid-area: links;
    justify-content: end;
    align-items: end;
  }
}

.text-shadow-black {
  text-shadow: 0 0 3px black;
}

.subtle-hr {
  border: 0;
  background: rgba(0, 0, 0, 0.05);
  height: 1px;
}

.no-box-shadow,
.no-box-shadow:focus {
  box-shadow: none;
}

.ThickUnderline {
  text-decoration-color: rgba(0, 0, 0, 0.2);
  text-decoration-thickness: 2px;
}

.ThickUnderline:focus,
.ThickUnderline:hover {
  text-decoration-color: currentColor;
}

.Bar-Container {
  align-self: center;
  box-shadow: inset 0 0 0 1px var(--color-border2);
}

.Bar-Fill {
  box-shadow: inset 0 0 0 1px var(--color-vibrant-border1);
}

.MonsterImage {
  box-shadow: inset 0 0 0 1px var(--color-vibrant-border);
  background: var(--type-color);
}

.PokeballHeader {
  --border-size: 8px;
  --circle-size: 36px;
  background-color: var(--color-pokeball);
  border-bottom: var(--border-size) solid #111;
  padding: 1rem;
  padding-top: calc(0.55 * var(--circle-size));
  padding-bottom: calc(0.55 * var(--circle-size));
  margin-top: 0;
  margin-bottom: 0;
}

.PokeballHeaderButton {
  background: #fff;
  border: 6px solid #111;
  box-shadow: inset 0 0 0 5px #fff, inset 0 0 0 7px #ccc;
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 50%;
  position: absolute;
  left: 50%;
  bottom: calc(-0.5 * var(--border-size));
  transform: translateX(-50%) translateY(50%);
  background-clip: content-box;
}

.PokeballHeaderButton:hover {
  filter: brightness(0.95);
}

.PokeballHeaderButton:active {
  transform: translateX(-50%) translateY(50%) translateY(0.5px) scale(0.97);
}

.EasterEgg {
  pointer-events: none;
  position: fixed;
  z-index: 1;
  bottom: 0;
  left: 50vw;
  transform: translateX(-50%) translateY(10vh);
  opacity: 0;
}

.EasterEgg[data-animate="true"] {
  animation: 2s EasterEggAnimation;
}

@keyframes EasterEggAnimation {
  10%,
  95% {
    opacity: 1;
    transform: translateX(-50%) translateY(-10.5vh) rotateZ(2deg);
  }
  15%,
  90% {
    opacity: 1;
    transform: translateX(-50%) translateY(-10vh);
  }
}

.EasterEgg img {
  filter: drop-shadow(0 0 1px white) drop-shadow(0 0 2px white)
    drop-shadow(0 0 3px white) drop-shadow(0 0 4px white)
    drop-shadow(0 0 5px white) drop-shadow(0 0 6px white)
    drop-shadow(0 0 7px rgb(0 0 0 / 20%));
}

.type-bg {
  background: var(--type-color, #333);
  color: white;
  text-shadow: 0 1px 0 black, 0 0 1px rgba(0, 0, 0, 0.6),
    0 0 2px rgba(0, 0, 0, 0.7), 0 0 3px rgba(0, 0, 0, 0.8),
    0 0 4px rgba(0, 0, 0, 0.9);
}

.PleaseUpdate {
  position: relative;
}

.PleaseUpdate::after {
  content: "";
  position: absolute;
  top: -1px;
  right: -1px;
  width: 0.5em;
  height: 0.5em;
  border-radius: 9999px;
  background: var(--color-badge);
  box-shadow: 0 0 0 2px var(--color-bg1);
}

.ShinyButton {
  position: absolute;
  top: 0;
  right: 0;
  margin: 1rem;
  background: var(--color-button1)
    linear-gradient(to bottom, var(--color-button1) 20%, var(--color-button1b));
  color: var(--color-fg1);
  border-color: var(--color-border1);
}

.ShinyButton:hover {
  background: var(--color-button-hover1)
    linear-gradient(
      to bottom,
      var(--color-button-hover1) 20%,
      var(--color-button-hover1b)
    );
}

.ShinyButton[aria-pressed="true"] {
  border-color: var(--color-fg1);
  background: var(--color-fg1);
  color: var(--color-bg1);
}

.ShinyButton:focus {
  outline: 2px solid var(--color-fg1);
  outline-offset: 2px;
}

.RadioCheckType {
  -webkit-appearance: none;
  appearance: none;
  width: 1rem;
  height: 1rem;
  flex: none;
  background: var(--type-color);
  border: 1px solid var(--color-vibrant-border1);
}

input[type="checkbox"].RadioCheckType {
  border-radius: 0.125rem;
}

input[type="radio"].RadioCheckType {
  border-radius: 9999px;
}

input[type="radio"].RadioCheckType:checked {
  background: black;
  box-shadow: inset 0 0 0 2px white;
  border-color: hsl(0, 0%, 0%, 0.5);
  background-clip: padding-box;
}

input[type="checkbox"].RadioCheckType:checked {
  background-clip: padding-box;
  --_blur: 0.5px;
  --_size: 0.125em;
  --_start: calc(50% - 0.5 * var(--_size));
  --_end: calc(var(--_start) + var(--_size));
  border-color: hsl(0, 0%, 0%, 0.5);
  background-color: white;
  background-image: linear-gradient(
      45deg,
      transparent,
      transparent calc(var(--_start) - var(--_blur)),
      black var(--_start),
      black var(--_end),
      transparent calc(var(--_end) + var(--_blur)),
      transparent
    ),
    linear-gradient(
      -45deg,
      transparent,
      transparent calc(var(--_start) - var(--_blur)),
      black var(--_start),
      black var(--_end),
      transparent calc(var(--_end) + var(--_blur)),
      transparent
    );
  box-shadow: inset 0 0 0 2px white;
}

.RadioCheckType:disabled {
  background: var(--color-bg2);
  border-color: var(--color-fg4);
}

.select-none {
  user-select: none;
}

.TabFocus:focus-within {
  outline: 2px solid var(--color-fg1);
  outline-offset: 2px;
}

.OutlineFocus:focus-within {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.OutlineFGFocus:focus-within {
  outline: 2px solid var(--color-fg1);
  outline-offset: 2px;
}

.SimpleFocus:focus-within {
  outline: 2px solid transparent;
  border-color: var(--color-fg1);
  box-shadow: 0 0 0 2px var(--color-border1);
}

.TableFocus:focus-within {
  outline: 2px solid transparent;
  border-color: var(--color-fg1);
  box-shadow: 0 0 0 2px var(--color-bg2), 0 0 0 3px var(--color-fg1),
    0 0 0 5px var(--color-border1);
}

.SelectedFocus:focus-within {
  outline: 2px solid transparent;
  box-shadow: 0 0 0 2px var(--color-bg1), 0 0 0 4px var(--color-fg1);
}

.DetailsFocus > summary:focus {
  outline: none;
}

.DetailsFocus > summary:focus > * {
  border-radius: 2px;
  outline: 2px solid transparent;
  box-shadow: 0 0 0 2px var(--color-bg1), 0 0 0 4px var(--color-fg1);
}

.NoFocus:focus {
  outline: none;
}

.pointer-none {
  pointer-events: none;
}
